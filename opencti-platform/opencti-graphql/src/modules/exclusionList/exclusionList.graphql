type ExclusionList implements InternalObject & BasicObject {
  id: ID! # internal_id
  name: String!
  description: String!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  created_at: DateTime!
  enabled: Boolean!
  list_entity_types: [ExclusionListEntityTypes!]!
}

type ExclusionListConnection {
  page: PageInfo!
  edges: [ExclusionListEdge!]
}

type ExclusionListEdge {
  node: ExclusionList!
}

enum ExclusionListOrdering {
  name
  created_at
}

enum ExclusionListEntityTypes {
  IPV4
  IPV6
  DOMAIN_NAME
  URL
}

input ExclusionListAddWithValuesInput {
  name: String!
  description: String
  list_entity_types: [ExclusionListEntityTypes!]!
  values: [String!]
}

input ExclusionListAddWithFileInput {
  name: String!
  description: String
  list_entity_types: [ExclusionListEntityTypes!]!
  file: Upload!
}

type Query {
  exclusionList(id: String!): ExclusionList @auth(for: [SETTINGS_SETCUSTOMIZATION])
  exclusionLists(
    first: Int
    after: ID
    orderBy: ExclusionListOrdering
    orderMode: OrderingMode
    filters: FilterGroup
    search: String
  ): ExclusionListConnection @auth(for: [SETTINGS_SETCUSTOMIZATION])
}

type Mutation {
  exclusionListAddWithValues(input: ExclusionListAddWithValuesInput): ExclusionList @auth(for: [SETTINGS_SETCUSTOMIZATION])
  exclusionListAddFWithFile(input: ExclusionListAddWithFileInput): ExclusionList @auth(for: [SETTINGS_SETCUSTOMIZATION])
  exclusionListDelete(id: ID!): ID @auth(for: [SETTINGS_SETCUSTOMIZATION])
}